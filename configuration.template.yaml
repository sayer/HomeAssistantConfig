# Loads default set of integrations. Do not remove.
default_config:

logger:
  default: warning
  logs:
    homeassistant.components.mqtt: debug
    homeassistant.components.light: debug

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

# Text to speech
tts:
  - platform: google_translate

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
shell_command: !include shell_commands.yaml

homeassistant:
  customize:
    zone.foretravel:
      radius: 20

influxdb:
  host: a0d7b954-influxdb
  port: 8086
  database: homeassistant
  username: homeassistant
  password: homeassistant
  max_retries: 3
  default_measurement: state

device_tracker:
  - platform: bluetooth_le_tracker
    track_new_devices: true
    track_battery: true

history:

recorder:
  purge_keep_days: 365

input_number:
  model_year:
    name: Coach Model Year
    min: 2000
    max: 2040
    step: 1
    mode: box
    icon: mdi:rv-truck
  coach_number:
    name: Coach Number
    min: 6000
    max: 10000
    step: 1
    mode: box
    icon: mdi:rv-truck

input_boolean:
  is_optimistic:
    name: "Use Optimistic Mode"
    icon: mdi:toggle-switch


input_text:
  owner_name:
    name: Owner Name


sensor:
  - platform: rest
    name: Current ISP
    scan_interval: 600
    resource: http://ip-api.com/json/?fields=isp
    value_template: "{{ value_json.isp }}"

  - platform: rest
    name: "Outback 1"
    resource: "http://192.168.100.231/Dev_status.cgi?&Port=0"
    headers:
      Content-Type: application/json
    method: GET
    scan_interval: 30
    json_attributes_path: "devstatus.ports[0]"
    json_attributes:
      - Batt_V
      - Warn
      - Error
      - AC_mode
      - INV_mode
      - VAC1_in_L2
      - VAC_out_L2
    value_template: "{{ value_json.devstatus.Sys_Batt_V }}"

  - platform: template
    sensors:
      outback1_voltage:
        friendly_name: "Outback 1 Battery Voltage"
        unit_of_measurement: "Vdc"
        value_template: "{{ state_attr('sensor.Outback_1', 'Batt_V') }}"
      outback1_warning:
        friendly_name: "Outback 1 Warning"
        value_template: "{{ state_attr('sensor.Outback_1', 'Warn') | string }}"
      outback1_error:
        friendly_name: "Outback 1 Error"
        value_template: "{{ state_attr('sensor.Outback_1', 'Error') | string }}"
      outback1_ac_mode:
        friendly_name: "Outback 1 AC Mode"
        value_template: "{{ state_attr('sensor.Outback_1', 'AC_mode') | string }}"
      outback1_inverter_mode:
        friendly_name: "Outback 1 Inverter Mode"
        value_template: "{{ state_attr('sensor.Outback_1', 'INV_mode') | string }}"
      outback1_vac1_in_l2:
        friendly_name: "Outback 1 VAC1_in_L2"
        value_template: "{{ state_attr('sensor.Outback_1', 'VAC1_in_L2') }}"
      outback1_vac_out_l2:
        friendly_name: "Outback 1 VAC_out_L2"
        value_template: "{{ state_attr('sensor.Outback_1', 'VAC_out_L2') }}"

  - platform: rest
    name: "Outback 2"
    resource: "http://192.168.100.228/Dev_status.cgi?&Port=0"
    headers:
      Content-Type: application/json
    method: GET
    scan_interval: 30
    json_attributes_path: "devstatus.ports[0]"
    json_attributes:
      - Batt_V
      - Warn
      - Error
      - AC_mode
      - INV_mode
      - VAC1_in_L2
      - VAC_out_L2
    value_template: "{{ value_json.devstatus.Sys_Batt_V }}"

  - platform: template
    sensors:
      outback2_voltage:
        friendly_name: "Outback 2 Battery Voltage"
        unit_of_measurement: "Vdc"
        value_template: "{{ state_attr('sensor.Outback_2', 'Batt_V') }}"
      outback2_warning:
        friendly_name: "Outback 2 Warning"
        value_template: "{{ state_attr('sensor.Outback_2', 'Warn') | string }}"
      outback2_error:
        friendly_name: "Outback 2 Error"
        value_template: "{{ state_attr('sensor.Outback_2', 'Error') | string }}"
      outback2_ac_mode:
        friendly_name: "Outback 2 AC Mode"
        value_template: "{{ state_attr('sensor.Outback_2', 'AC_mode') | string }}"
      outback2_inverter_mode:
        friendly_name: "Outback 2 Inverter Mode"
        value_template: "{{ state_attr('sensor.Outback_2', 'INV_mode') | string }}"
      outback2_vac1_in_l2:
        friendly_name: "Outback 2 VAC1_in_L2"
        value_template: "{{ state_attr('sensor.Outback_2', 'VAC1_in_L2') }}"
      outback2_vac_out_l2:
        friendly_name: "Outback 2 VAC_out_L2"
        value_template: "{{ state_attr('sensor.Outback_2', 'VAC_out_L2') }}"

  - platform: history_stats
    type: time
    name: Generator Day Run Time
    entity_id: sensor.generator
    state: running
    start: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
    end: "{{ now() }}"

  - platform: history_stats
    type: time
    name: Generator Oil Duration
    entity_id: sensor.generatorstatus
    state: "running"
    start: '{{ states("input_datetime.reset_generator_on_time") | as_timestamp }}'
    end: "{{ now() }}"

  - platform: template
    sensors:
      ac_source:
        friendly_name: "Power Source"
        value_template: >-
          {% set rms_current = states('sensor.power_rms_current') %}
          {% set generator_status = states('sensor.generatorstatus') %}
          {% if (rms_current == 0) or (rms_current == 'unknown') %}
          Inverter
          {% elif generator_status == 'running' %}
          Generator
          {% else %}
          Shore
          {% endif %}

      generator_current_run_time:
        friendly_name: "Run time"
        value_template: >-
          {% if (states('switch.generator') != 'on') or (states.switch.generatorstatus.last_changed == 'unknown') or (states.switch.generatorstatus.last_changed == 'unavailable') %}
          n/a
          {% else %}
          {{ relative_time(states.switch.generatorstatus.last_changed) | timestamp_custom('%-H hours and %-M minutes', false) }}
          {% endif %}

# Example configuration.yaml entry
notify:
  - name: "HA_Email_Notify"
    platform: smtp
    sender: "sayer@ayersnet.com"
    recipient: "sayer@ayersnet.com"

mqtt:

  lock:
    - name: "Entry Door Lock"
      icon: mdi:key
      state_topic: "RVC/LOCK_STATUS/1"
      unique_id: "EntryDoorLock"
      value_template: "{{ value_json['lock status definition'] }}"
      command_topic: "RVCSET/MESSAGE/1FEE4"
      payload_lock: "0101FFFFFFFFFFFF"
      payload_unlock: "0100FFFFFFFFFFFF"
      state_locked: "locked"
      state_unlocked: "unlocked"

    - name: "Cargo Door Lock 1"
      icon: mdi:key
      state_topic: "RVC/LOCK_STATUS/2"
      value_template: "{{ value_json['lock status definition'] }}"
      command_topic: "RVCSET/MESSAGE/1FEE4"
      payload_lock: "0201FFFFFFFFFFFF"
      payload_unlock: "0200FFFFFFFFFFFF"
      state_locked: "locked"
      state_unlocked: "unlocked"
      unique_id: "cargo_door_lock1"
    - name: "Cargo Door Lock 2"
      icon: mdi:key
      state_topic: "RVC/LOCK_STATUS/3"
      value_template: "{{ value_json['lock status definition'] }}"
      command_topic: "RVCSET/MESSAGE/1FEE4"
      payload_lock: "0301FFFFFFFFFFFF"
      payload_unlock: "0300FFFFFFFFFFFF"
      state_locked: "locked"
      state_unlocked: "unlocked"
      unique_id: "cargo_door_lock2"
    - name: "Cargo Door Lock 3"
      icon: mdi:key
      state_topic: "RVC/LOCK_STATUS/4"
      value_template: "{{ value_json['lock status definition'] }}"
      command_topic: "RVCSET/MESSAGE/1FEE4"
      payload_lock: "0401FFFFFFFFFFFF"
      payload_unlock: "0400FFFFFFFFFFFF"
      state_locked: "locked"
      state_unlocked: "unlocked"
      unique_id: "cargo_door_lock3"
    - name: "Cargo Door Door 4"
      icon: mdi:key
      state_topic: "RVC/LOCK_STATUS/5"
      value_template: "{{ value_json['lock status definition'] }}"
      command_topic: "RVCSET/MESSAGE/1FEE4"
      payload_lock: "0501FFFFFFFFFFFF"
      payload_unlock: "0501FFFFFFFFFFFF"
      state_locked: "locked"
      state_unlocked: "unlocked"
      unique_id: "cargo_door_lock4"
    - name: "Cargo Door Lock 5"
      icon: mdi:key
      state_topic: "RVC/LOCK_STATUS/6"
      value_template: "{{ value_json['lock status definition'] }}"
      command_topic: "RVCSET/MESSAGE/1FEE4"
      payload_lock: "0601FFFFFFFFFFFF"
      payload_unlock: "0601FFFFFFFFFFFF"
      state_locked: "locked"
      state_unlocked: "unlocked"
      unique_id: "cargolcargo_door_lock5"


  climate:
    - name: Living Room
      temperature_unit: "F"
      modes:
        - "off"
        - "heat"
        - "cool"
        - "fan_only"
      fan_modes:
        - "high"
        - "medium"
        - "low"
      mode_state_template: "{{ value_json['operating mode definition'] }}"
      mode_command_topic: "RVCSET/THERMOSTAT_COMMAND_1_MODE/2"
      #      mode_command_template: "{{ value if value=="off" else "on" }}"
      temperature_command_topic: "RVCSET/THERMOSTAT_COMMAND_1_TEMP/2"
      temperature_state_topic: "RVC/THERMOSTAT_COMMAND_1/2"
      temperature_state_template: >-
        {% if value_json['setpoint temp heat F'] == "n/a" %}
          0
        {% else %}
          {{ value_json['setpoint temp heat F'] }}
        {% endif %}
      fan_mode_command_topic: "RVC/THERMOSTAT_COMMAND_1_FAN/2"
      unique_id: "hvac_livingroom"
      precision: 1.0
      max_temp: 85
      min_temp: 40
      initial: 72
    - name: Kitchen
      temperature_unit: "F"
      modes:
        - "off"
        - "heat"
        - "cool"
        - "fan_only"
      fan_modes:
        - "high"
        - "medium"
        - "low"
      mode_state_template: "{{ value_json['operating mode definition'] }}"
      mode_command_topic: "RVCSET/THERMOSTAT_COMMAND_1_MODE/3"
      #      mode_command_template: "{{ value if value=="off" else "on" }}"
      temperature_command_topic: "RVCSET/THERMOSTAT_COMMAND_1_TEMP/3"
      temperature_state_topic: "RVC/THERMOSTAT_COMMAND_1/3"
      temperature_state_template: >-
        {% if value_json['setpoint temp heat F'] == "n/a" %}
          0
        {% else %}
          {{ value_json['setpoint temp heat F'] }}
        {% endif %}
      fan_mode_command_topic: "RVC/THERMOSTAT_COMMAND_1_FAN/3"
      unique_id: "hvac_kitchen"
      precision: 1.0
      max_temp: 85
      min_temp: 40
      initial: 72

  light:
    # Using the template format you provided
    - name: "Docking Lights"
      unique_id: "docking_lights"
      state_topic: "RVC/DC_DIMMER_STATUS_3/%%DOCKING_LIGHTS_CODE%%"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/%%DOCKING_LIGHTS_CODE%%/set"
      command_on_template: '{"instance": %%DOCKING_LIGHTS_CODE%%, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": %%DOCKING_LIGHTS_CODE%%, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%
      #entity_category: "diagnostic" # Hidden from UI

    - name: "Panel Light"
      unique_id: "panel_lights"
      state_topic: "RVC/DC_DIMMER_STATUS_3/100"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/100/set"
      command_on_template: '{"instance": 100, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 100, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Panel Lights old"
      state_topic: "RVC/DC_DIMMER_STATUS_3/1"
      state_value_template: "{% if value_json['brightness'] == 0 %} 0 {% else %} 100 {% endif %}"
      command_topic: "RVCSET/MESSAGE/1FED9"
      payload_on: "FF7E64FFFFFF00FF"
      payload_off: "FF7E00FFFFFF00FF"
      optimistic: %%OPTIMISTIC_MODE%%
      unique_id: "panel_lights_old"

    - name: "Entry Light"
      unique_id: "dimmer_3_1"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/1"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/1/set"
      command_on_template: '{"instance": 1, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 1, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Cockpit Accents"
      unique_id: "dimmer_3_2"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/2"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/2/set"
      command_on_template: '{"instance": 2, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 2, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Living Room Ceiling"
      unique_id: "dimmer_3_3"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/3"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/3/set"
      command_on_template: '{"instance": 3, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 3, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Living Room Accents"
      unique_id: "dimmer_3_4"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/4"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/4/set"
      command_on_template: '{"instance": 4, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 4, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "D/S Front Sofa"
      unique_id: "dimmer_3_5"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/5"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/5/set"
      command_on_template: '{"instance": 5, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 5, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "D/S Front Accent"
      unique_id: "dimmer_3_6"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/6"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/6/set"
      command_on_template: '{"instance": 6, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 6, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Living Room Ceiling Recess"
      unique_id: "dimmer_3_8"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/8"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/8/set"
      command_on_template: '{"instance": 8, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 8, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "P/S Dinette Ceiling"
      unique_id: "dimmer_3_9"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/9"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/9/set"
      command_on_template: '{"instance": 9, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 9, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "P/S Dinette Accent"
      unique_id: "dimmer_3_10"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/10"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/10/set"
      command_on_template: '{"instance": 10, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 10, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Kitchen Ceiling"
      unique_id: "dimmer_3_12"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/12"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/12/set"
      command_on_template: '{"instance": 12, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 12, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Kitchen Sink"
      unique_id: "dimmer_3_13"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/13"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/13/set"
      command_on_template: '{"instance": 13, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 13, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Floor Lights"
      unique_id: "dimmer_3_14"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/14"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/14/set"
      command_on_template: '{"instance": 14, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 14, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Mid Batch Ceiling"
      unique_id: "dimmer_3_15"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/15"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/15/set"
      command_on_template: '{"instance": 15, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 15, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Mid Batch Accent"
      unique_id: "dimmer_3_16"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/16"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/16/set"
      command_on_template: '{"instance": 16, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 16, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Hall Ceiling"
      unique_id: "dimmer_3_17"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/17"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/17/set"
      command_on_template: '{"instance": 17, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 17, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Bedroom Ceiling"
      unique_id: "dimmer_3_18"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/18"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/18/set"
      command_on_template: '{"instance": 18, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 18, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Bedroom Ceiling Accent"
      unique_id: "dimmer_3_19"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/19"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/19/set"
      command_on_template: '{"instance": 19, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 19, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Bedroom right reading"
      unique_id: "dimmer_3_21"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/21"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/21/set"
      command_on_template: '{"instance": 21, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 21, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Bedroom left reading"
      unique_id: "dimmer_3_22"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/22"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/22/set"
      command_on_template: '{"instance": 22, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 22, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Bedroom D/S accent"
      unique_id: "dimmer_3_23"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/23"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/23/set"
      command_on_template: '{"instance": 23, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 23, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Bedroom Dresser Ceiling"
      unique_id: "dimmer_3_24"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/24"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/24/set"
      command_on_template: '{"instance": 24, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 24, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Bedroom Dresser accent"
      unique_id: "dimmer_3_25"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/25"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/25/set"
      command_on_template: '{"instance": 25, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 25, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Rear Bath Shower"
      unique_id: "dimmer_3_27"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/27"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/27/set"
      command_on_template: '{"instance": 27, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 27, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Rear Bath Ceiling"
      unique_id: "dimmer_3_28"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/28"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/28/set"
      command_on_template: '{"instance": 28, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 28, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Rear Bath Accent"
      unique_id: "dimmer_3_29"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/29"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/29/set"
      command_on_template: '{"instance": 29, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 29, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Rear Bath Vanity"
      unique_id: "dimmer_3_30"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/30"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/30/set"
      command_on_template: '{"instance": 30, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 30, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Bedroom Recess Ceiling"
      unique_id: "dimmer_3_31"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/31"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/31/set"
      command_on_template: '{"instance": 31, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 31, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Top Bunk Reading"
      unique_id: "dimmer_3_32"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/32"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/32/set"
      command_on_template: '{"instance": 32, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 32, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Top Bunk Accent"
      unique_id: "dimmer_3_33"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/33"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/33/set"
      command_on_template: '{"instance": 33, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 33, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Bottom Bunk Reading"
      unique_id: "dimmer_3_34"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/34"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/34/set"
      command_on_template: '{"instance": 34, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 34, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Bottom Bunk Accent"
      unique_id: "dimmer_3_35"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/35"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/35/set"
      command_on_template: '{"instance": 35, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 35, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Awning Lights"
      unique_id: "dimmer_3_122"
      state_topic: "RVC/DC_DIMMER_STATUS_3/%%AWNING_LIGHTS%%"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/%%AWNING_LIGHTS%%/set"
      command_on_template: '{"instance": %%AWNING_LIGHTS%%, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": %%AWNING_LIGHTS%%, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Exterior Accents"
      unique_id: "dimmer_3_123"
      state_topic: "RVC/DC_DIMMER_STATUS_3/%%EXTERIOR_ACCENT_LIGHTS%%"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/%%EXTERIOR_ACCENT_LIGHTS%%/set"
      command_on_template: '{"instance": %%EXTERIOR_ACCENT_LIGHTS%%, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": %%EXTERIOR_ACCENT_LIGHTS%%, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Passenger Map Light"
      unique_id: "dimmer_3_124"
      icon: mdi:light-recessed
      state_topic: "RVC/DC_DIMMER_STATUS_3/124"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/124/set"
      command_on_template: '{"instance": 124, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 124, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Porch Handle"
      unique_id: "dimmer_3_127"
      state_topic: "RVC/DC_DIMMER_STATUS_3/127"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/127/set"
      command_on_template: '{"instance": 127, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 127, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

    - name: "Master Switch"
      unique_id: "dimmer_3_128"
      state_topic: "RVC/DC_DIMMER_STATUS_3/128"
      state_template: >-
        {% if value_json['operating status (brightness)']|int > 0 %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/DC_DIMMER_COMMAND_2/128-DONOTUSE/set"
      command_on_template: '{"instance": 128, "desired level": 100, "command": 0}'
      command_off_template: '{"instance": 128, "desired level": 0, "command": 3}'
      schema: "template"
      optimistic: %%OPTIMISTIC_MODE%%

  switch:
    - name: "Aqua-Hot Combustion"
      unique_id: aqua_hot_combustion_switch_mqtt
      icon: mdi:fire
      state_topic: "RVC/WATERHEATER_STATUS/1"
      # State is 'on' if mode is 1 (combustion) or 3 (gas electric)
      #value_template: "{{ value_json['operating modes'] | int(-1) in [1, 3] }}"
      value_template: "{{ 'on' if value_json['operating modes']|int in [1, 3] else 'off' }}"
      command_topic: "RVC/WATERHEATER_COMMAND/1/set"
      # Use command_template to dynamically set payload based on desired state and other switch state
      command_template: >-
        {% set current_mode = states('sensor.aqua_hot_operating_mode_raw') | int(-1) %}
        {% set electric = states('switch.aqua_hot_electric_switch_mqtt') %}
        {% if value == 'on' %}
          {% if electric == 'on' %}
            {"instance": 1, "operating modes": 3}
          {% else %}
            {"instance": 1, "operating modes": 1}
          {% endif %}
        {% else %}
          {% if current_mode == 3 and electric == 'on' %}
            {"instance": 1, "operating modes": 2}
          {% else %}
            {"instance": 1, "operating modes": 0}
          {% endif %}
        {% endif %}
      state_on: "on"
      state_off: "off"
      optimistic: false
      retain: false

    - name: "Aqua-Hot Electric Low"
      unique_id: aqua_hot_electric_low_switch
      icon: mdi:flash
      state_topic: "RVC/WATERHEATER_COMMAND_2"
      value_template: >-
        {% set s = states('sensor.aqua_hot_electric_low_state') %}
        {{ 'on' if s == 'on' else 'off' }}
      command_topic: "RVC/WATERHEATER_COMMAND_2/1/set"
      payload_on: '{"instance": 1, "command": 0}'
      payload_off: '{"instance": 1, "command": 1}'
      state_on: "on"
      state_off: "off"
      optimistic: false
      retain: false

    - name: "Aqua-Hot Electric High"
      unique_id: aqua_hot_electric_high_switch
      icon: mdi:flash
      state_topic: "RVC/WATERHEATER_COMMAND_2"
      value_template: >-
        {% set s = states('sensor.aqua_hot_electric_high_state') %}
        {{ 'on' if s == 'on' else 'off' }}
      command_topic: "RVC/WATERHEATER_COMMAND_2/1/set"
      payload_on: '{"instance": 1, "command": 3}'
      payload_off: '{"instance": 1, "command": 4}'
      state_on: "on"
      state_off: "off"
      optimistic: false
      retain: false

    - name: "Aqua-Hot Burner"
      unique_id: aqua_hot_burner_switch
      icon: mdi:fire
      state_topic: "RVC/WATERHEATER_COMMAND_2"
      value_template: >-
        {% set s = states('sensor.aqua_hot_burner_state') %}
        {{ 'on' if s == 'on' else 'off' }}
      command_topic: "RVC/WATERHEATER_COMMAND_2/1/set"
      payload_on: '{"instance": 1, "command": 6}'
      payload_off: '{"instance": 1, "command": 7}'
      state_on: "on"
      state_off: "off"
      optimistic: false
      retain: false

    - name: "Aqua-Hot Electric"
      unique_id: aqua_hot_electric_switch_mqtt
      icon: mdi:lightning-bolt
      state_topic: "RVC/WATERHEATER_STATUS/1"
      # State is 'on' if mode is 2 (electric) or 3 (gas electric)
      value_template: "{{ 'on' if value_json['operating modes']|int in [2, 3] else 'off' }}"
      command_topic: "RVC/WATERHEATER_COMMAND/1/set"
      # Use command_template to dynamically set payload based on desired state and other switch state
      command_template: >-
        {% set current_mode = states('sensor.aqua_hot_operating_mode_raw') | int(-1) %}
        {% set combustion = states('switch.aqua_hot_combustion_switch_mqtt') %}
        {% if value == 'on' %}
          {% if combustion == 'on' %}
            {"instance": 1, "operating modes": 3}
          {% else %}
            {"instance": 1, "operating modes": 2}
          {% endif %}
        {% else %}
          {% if current_mode == 3 and combustion == 'on' %}
            {"instance": 1, "operating modes": 1}
          {% else %}
            {"instance": 1, "operating modes": 0}
          {% endif %}
        {% endif %}
      state_on: "on"
      state_off: "off"
      optimistic: false
      retain: false


    - name: "AC 1"
      state_topic: "RVC/THERMOSTAT_COMMAND_1/1"
      value_template: "{{ value_json['operating mode definition'] }}"
      payload_on: "01C1FFFFFFFFFFFF"
      payload_off: "01F0FFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEF9"
      state_on: "cool"
      state_off: "off"
      unique_id: "AC1"

    - name: "AC 2"
      state_topic: "RVC/THERMOSTAT_COMMAND_1/2"
      value_template: "{{ value_json['operating mode definition'] }}"
      payload_on: "02C1FFFFFFFFFFFF"
      payload_off: "02C0FFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEF9"
      state_on: "cool"
      state_off: "off"
      unique_id: "AC2"

    - name: "AC 3"
      state_topic: "RVC/THERMOSTAT_COMMAND_1/3"
      value_template: "{{ value_json['operating mode definition'] }}"
      payload_on: "03C1FFFFFFFFFFFF"
      payload_off: "03C0FFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEF9"
      state_on: "cool"
      state_off: "off"
      unique_id: "AC3"

    - name: "AC 4"
      state_topic: "RVC/THERMOSTAT_COMMAND_1/4"
      value_template: "{{ value_json['operating mode definition'] }}"
      payload_on: "04C1FFFFFFFFFFFF" # 04FFFFFFFF4F25FF - Set to 78
      payload_off: "04C0FFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEF9"
      state_on: "cool"
      state_off: "off"
      unique_id: "AC4"

    - name: "Heat 1"
      state_topic: "RVC/THERMOSTAT_COMMAND_1/1"
      value_template: "{{ value_json['operating mode definition'] }}"
      payload_on: "01F2FFFFFFFFFFFF"
      payload_off: "01F0FFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEF9"
      state_on: "heat"
      state_off: "off"
      unique_id: "HEAT1"

    - name: "Heat 2"
      state_topic: "RVC/THERMOSTAT_COMMAND_1/2"
      value_template: "{{ value_json['operating mode definition'] }}"
      payload_on: "02F2FFFFFFFFFFFF"
      payload_off: "02F0FFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEF9"
      state_on: "heat"
      state_off: "off"
      unique_id: "HEAT2"

    - name: "Heat 3"
      state_topic: "RVC/THERMOSTAT_COMMAND_1/3"
      value_template: "{{ value_json['operating mode definition'] }}"
      payload_on: "03F2FFFFFFFFFFFF"
      payload_off: "03F0FFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEF9"
      state_on: "heat"
      state_off: "off"
      unique_id: "HEAT3"

    - name: "Heat 4"
      state_topic: "RVC/THERMOSTAT_COMMAND_1/4"
      value_template: "{{ value_json['operating mode definition'] }}"
      payload_on: "04F2FFFFFFFFFFFF"
      payload_off: "04F0FFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEF9"
      state_on: "heat"
      state_off: "off"
      unique_id: "HEAT4"

    - name: "Auto Gen"
      state_topic: "RVC/AGS_CRITERION_STATUS/1"
      value_template: "{{ value_json['active status definition'] }}"
      payload_on: "01F400FFFFFFFFFF"
      payload_off: "01F000FFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEFD"
      state_on: "active"
      state_off: "inactive"
      unique_id: "auto_gen1"
    - name: "Auto Gen 5"
      state_topic: "RVC/AGS_CRITERION_STATUS/5"
      value_template: "{{ value_json['active status definition'] }}"
      payload_on: "05F4FAFFFFFFFFFF"
      payload_off: "05F0FAFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEFD"
      state_on: "active"
      state_off: "inactive"
      unique_id: "auto_gen5"
    - name: "Auto Gen 8"
      state_topic: "RVC/AGS_CRITERION_STATUS/8"
      value_template: "{{ value_json['active status definition'] }}"
      payload_on: "08F4F8FFFFFFFFFF"
      payload_off: "08F0F8FFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEFD"
      state_on: "active"
      state_off: "inactive"
      unique_id: "auto_gen8"

    - name: "Floor Heat 1"
      unique_id: "floor_heat_1"
      state_topic: "RVC/FLOOR_HEAT_STATUS/1"
      value_template: "{{ value_json['operating status definition'] }}"
      command_topic: "RVC/FLOOR_HEAT_COMMAND/1/set"
      payload_on: '{"instance": 1, "Desired operating mode": 0, "Set point": 24.5, "Dead band": 5}'
      payload_off: '{"instance": 1, "Desired operating mode": 0, "Set point": 0}'
      state_on: "on"
      state_off: "off"

  
    - name: "Floor Heat 2"
      unique_id: "floor_heat_2"
      state_topic: "RVC/FLOOR_HEAT_STATUS/2"
      value_template: "{{ value_json['operating status definition'] }}"
      command_topic: "RVC/FLOOR_HEAT_COMMAND/2/set"
      payload_on: '{"instance": 2, "Desired operating mode": 0, "Set point": 24.5, "Dead band": 5}'
      payload_off: '{"instance": 2, "Desired operating mode": 0, "Set point": 0}'
      state_on: "on"
      state_off: "off"

    - name: "Floor Heat 3"
      unique_id: "floor_heat_3"
      state_topic: "RVC/FLOOR_HEAT_STATUS/3"
      value_template: "{{ value_json['operating status definition'] }}"
      command_topic: "RVC/FLOOR_HEAT_COMMAND/3/set"
      payload_on: '{"instance": 3, "Desired operating mode": 0, "Set point": 24.5, "Dead band": 5}'
      payload_off: '{"instance": 3, "Desired operating mode": 0, "Set point": 0}'
      state_on: "on"
      state_off: "off"

    - name: "Floor Heat 1 - old"
      state_topic: "RVC/FLOOR_HEAT_STATUS/1"
      value_template: "{{ value_json['operating status definition'] }}"
      payload_on: "01D43025FFFFFFFF"
      payload_off: "01C00000FFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEFB"
      state_on: "on"
      state_off: "off"
      unique_id: "floor_heat_1_old"

    - name: "Floor Heat 2 - old"
      state_topic: "RVC/FLOOR_HEAT_STATUS/2"
      value_template: "{{ value_json['operating status definition'] }}"
      payload_on: "02D43025FFFFFFFF"
      payload_off: "02C00000FFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEFB"
      state_on: "on"
      state_off: "off"
      unique_id: "floor_heat_2_old"
    - name: "Floor Heat 3 - old"
      state_topic: "RVC/FLOOR_HEAT_STATUS/3"
      value_template: "{{ value_json['operating status definition'] }}"
      payload_on: "03D48025FFFFFFFF"
      payload_off: "03C00000FFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FEFB"
      state_on: "on"
      state_off: "off"
      unique_id: "floor_heat_3_old"


    - name: "Mid Bath Fan - old working"
      state_topic: "RVC/DC_DIMMER_STATUS_3/55"
      value_template: "{{ value_json['operating status (brightness)'] }}"
      command_topic: "RVCSET/DC_DIMMER_STATUS_3/55"
      payload_on: "100"
      payload_off: "0"
      state_on: "100"
      state_off: "0"
      unique_id: "dimmer_3_55"
    - name: "Rear Bath Fan"
      state_topic: "RVC/DC_DIMMER_STATUS_3/56"
      value_template: "{{ value_json['operating status (brightness)'] }}"
      payload_on: "100"
      payload_off: "0"
      command_topic: "RVCSET/DC_DIMMER_STATUS_3/56"
      state_on: "100"
      state_off: "0"
      unique_id: "dimmer_3_56"

    - name: "Mid Bath Fan Switch"
      unique_id: "mid_bath_fan_switch"
      state_topic: "RVC/DC_DIMMER_STATUS_3/%%VENT_FAN1%%"
      command_topic: "RVC/DC_DIMMER_COMMAND_2/%%VENT_FAN1%%/set"
      value_template: >-
        {# Ensure brightness key exists and is a number before converting to string #}
        {% if value_json['operating status (brightness)'] is number %}
          {{ value_json['operating status (brightness)'] | string }}
        {% else %}
          "0" {# Default to string "0" if missing/invalid #}
        {% endif %}
      # state_on/state_off compare the *result* of the value_template
      state_on: "100" # Fan is ON if the template returns the string "100"
      state_off: "0" # Fan is OFF if the template returns the string "0"
      payload_on: '{"instance": %%VENT_FAN1%%, "desired level": 100, "command": 0}'
      payload_off: '{"instance": %%VENT_FAN1%%, "desired level": 0, "command": 3}'
      json_attributes_topic: "RVC/DC_DIMMER_STATUS_3/%%VENT_FAN1%%"
      optimistic: %%OPTIMISTIC_MODE%%
      icon: mdi:fan

    - name: "Rear Bath Fan Switch"
      state_topic: "RVC/DC_DIMMER_STATUS_3/%%VENT_FAN2%%"
      command_topic: "RVC/DC_DIMMER_COMMAND_2/%%VENT_FAN2%%/set"
      value_template: >-
        {# Ensure brightness key exists and is a number before converting to string #}
        {% if value_json['operating status (brightness)'] is number %}
          {{ value_json['operating status (brightness)'] | string }}
        {% else %}
          "0" {# Default to string "0" if missing/invalid #}
        {% endif %}
      # state_on/state_off compare the *result* of the value_template
      state_on: "100" # Fan is ON if the template returns the string "100"
      state_off: "0" # Fan is OFF if the template returns the string "0"
      payload_on: '{"instance": %%VENT_FAN2%%, "desired level": 100, "command": 0}'
      payload_off: '{"instance": %%VENT_FAN2%%, "desired level": 0, "command": 3}'
      json_attributes_topic: "RVC/DC_DIMMER_STATUS_3/%%VENT_FAN1%%"
      unique_id: "rear_bath_fan_switch"
      icon: mdi:fan

    - name: "Mid Bath Fan - old"
      state_topic: "RVC/DC_DIMMER_STATUS_3/%%VENT_FAN1%%"
      value_template: "{{ value_json['operating status (brightness)'] }}"
      command_topic: "RVCSET/DC_DIMMER_STATUS_3/%%VENT_FAN1%%"
      payload_on: "100"
      payload_off: "0"
      state_on: "100"
      state_off: "0"
      unique_id: "dimmer_3_55 - old"

    - name: "Water Pump"
      unique_id: "waterpump"
      state_topic: "RVC/WATER_PUMP_STATUS"
      value_template: "{{ value_json['operating status definition'] }}"
      command_topic: "RVC/WATER_PUMP_COMMAND/set"
      payload_on: '{"command": 1}'
      payload_off: '{"command": 0}'
      state_on: "on"
      state_off: "off"

    - name: "Black Waste Dump"
      unique_id: "blackwastedump"
      state_topic: "RVC/WASTEDUMP_STATUS"
      value_template: "{{ value_json['black valve definition'] }}"
      command_topic: "RVC/WASTEDUMP_COMMAND/set"
      payload_on: '{"black valve": 5}'
      payload_off: '{"black valve": 0}'
      state_on: "open"
      state_off: "closed"

    - name: "Black Waste Dump - old"
      state_topic: "RVC/WASTEDUMP_COMMAND"
      value_template: "{{ value_json['black valve definition'] }}"
      payload_on: "05FFFFFFFFFFFFFF"
      payload_off: "00FFFFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FFAE"
      state_on: "open"
      state_off: "closed"
      unique_id: "blackwastedump_old"

    - name: "Gray Water Bypass"
      unique_id: "graywaterbypass"
      state_topic: "RVC/WASTEDUMP_STATUS"
      value_template: "{{ value_json['gray valve definition'] }}"
      command_topic: "RVC/WASTEDUMP_COMMAND/255/set"
      payload_on: '{"Command - Gray tank": 1}'
      payload_off: '{"Command - Gray tank": 0}'
      state_on: "open"
      state_off: "closed"

    - name: "Gray Water Bypass - old"
      state_topic: "RVC/WASTEDUMP_COMMAND"
      value_template: "{{ value_json['gray valve definition'] }}"
      payload_on: "FF01FFFFFFFFFFFF"
      payload_off: "FF00FFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FFAE"
      state_on: "open"
      state_off: "closed"
      unique_id: "graywaterbypass_old"

    - name: "Water Autofill"
      unique_id: "waterautofill"
      state_topic: "RVC/AUTOFILL_STATUS"
      value_template: "{{ value_json['valve status definition'] }}"
      command_topic: "RVC/AUTOFILL_COMMAND/set"
      payload_on: '{"command": 1}'
      payload_off: '{"command": 0}'
      state_on: "open"
      state_off: "closed"

    - name: "Generator"
      unique_id: "generatorstatus"
      state_topic: "RVC/GENERATOR_STATUS_1"
      value_template: "{{ value_json['status definition'] }}"
      command_topic: "RVC/GENERATOR_COMMAND/1/set"
      payload_on: '{"instance": 1, "command": 1}'
      payload_off: '{"instance": 1, "command": 0}'
      state_on: "running"
      state_off: "stopped"

    - name: "Water Autofill - old"
      state_topic: "RVC/AUTOFILL_STATUS"
      value_template: "{{ value_json['valve status definition'] }}"
      payload_on: "FDFFFFFFFFFFFFFF"
      payload_off: "FCFFFFFFFFFFFFFF"
      command_topic: "RVCSET/MESSAGE/1FFB0"
      state_on: "open"
      state_off: "closed"
      unique_id: "waterautofill_old"

  fan:
    - name: "Roof Fan"
      unique_id: "roof_fan_1"
      state_topic: "RVC/ROOF_FAN_STATUS_1/1"
      state_value_template: >-
        {% if value_json['System Status'] == 'On' %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/ROOF_FAN_COMMAND_1/1/set"
      payload_on: '{"instance": 1, "Direction of movement": "extend"}'
      payload_off: '{"instance": 1, "Direction of movement": "retract"}'
      optimistic: %%OPTIMISTIC_MODE%%
      icon: "mdi:fan"

    - name: "Roof Fan"
      unique_id: "roof_fan_2"
      state_topic: "RVC/ROOF_FAN_STATUS_1/2"
      state_value_template: >-
        {% if value_json['System Status'] == 'On' %}
          on
        {% else %}
          off
        {% endif %}
      command_topic: "RVC/ROOF_FAN_COMMAND_1/2/set"
      payload_on: '{"instance": 2, "Direction of movement": "extend"}'
      payload_off: '{"instance": 2, "Direction of movement": "retract"}'
      optimistic: %%OPTIMISTIC_MODE%%
      icon: "mdi:fan"

  cover:
  
%%ALL_SHADES%%

  sensor:

    - name: "Cargo Lock 2 Raw Status"
      state_topic: "RVC/LOCK_STATUS/3"
      value_template: "{{ value_json['lock status definition'] | default('MISSING') }}"
      unique_id: "debug_cargolock2_raw"


    # Battery Voltage Sensor
    - name: "House Battery Voltage"
      state_topic: "RVC/DC_SOURCE_STATUS_1/1"
      unit_of_measurement: "V"
      device_class: "voltage"
      state_class: "measurement"
      value_template: >
        {% if value_json['dc voltage'] == "n/a" %}
          0
        {% else %}
          {{ value_json['dc voltage'] }}
        {% endif %}

    # Battery Current Sensor
    - name: "House Battery Current"
      state_topic: "RVC/DC_SOURCE_STATUS_1/1"
      unit_of_measurement: "A"
      device_class: "current"
      state_class: "measurement"
      value_template: >
        {% if value_json['dc current'] == "n/a" %}
          0
        {% else %}
          {{ value_json['dc current'] }}
        {% endif %}

    # Battery State of Charge
    - name: "House Battery State of Charge"
      state_topic: "RVC/DC_SOURCE_STATUS_2/1"
      unit_of_measurement: "%"
      device_class: "battery"
      state_class: "measurement"
      value_template: >
        {% if value_json['state of charge'] == "n/a" %}
          0
        {% else %}
          {{ value_json['state of charge'] }}
        {% endif %}

    # Battery Health
    - name: "House Battery Health"
      state_topic: "RVC/DC_SOURCE_STATUS_3/1"
      unit_of_measurement: "%"
      state_class: "measurement"
      value_template: >
        {% if value_json['state of health'] == "n/a" %}
          0
        {% else %}
          {{ value_json['state of health'] }}
        {% endif %}

    # Aqua-Hot Temperature
    - name: "Aqua-Hot Temperature"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: "{{ value_json['water temperature'] }}"
      unit_of_measurement: "°C"
      device_class: temperature
      state_class: measurement

    - name: "Aqua-Hot Temperature F"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: "{{ value_json['water temperature F'] }}"
      unit_of_measurement: "°F"
      device_class: temperature
      state_class: measurement

    - name: "Aqua-Hot Instance"
      unique_id: "aqua_hot_instance"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: "{{ value_json['instance'] }}"
      icon: mdi:numeric

    - name: "Aqua-Hot Operating Mode"
      unique_id: "aqua_hot_operating_mode"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: >-
        {% set mode = value_json['operating modes'] %}
        {% if mode == 0 %} off
        {% elif mode == 1 %} combustion
        {% elif mode == 2 %} electric
        {% elif mode == 3 %} gas electric
        {% elif mode == 4 %} automatic
        {% elif mode == 5 %} test combustion
        {% elif mode == 6 %} test electric
        {% else %} invalid
        {% endif %}
      icon: mdi:water-boiler



    - name: "Aqua-Hot Electric High State"
      unique_id: aqua_hot_electric_high_state
      state_topic: "RVC/WATERHEATER_COMMAND_2"
      value_template: >-
        {% if value_json is defined and value_json['Command'] is defined %}
          {{ 'on' if value_json['Command'] == 3 else 'off' }}
        {% else %}
          invalid
        {% endif %}

    - name: "Aqua-Hot Burner State"
      unique_id: aqua_hot_burner_state
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: >-
        {% if value_json is defined and value_json['burner status'] is defined %}
          {{ 'on' if value_json['burner status'] == '01' else 'off' }}
        {% else %}
          invalid 
        {% endif %}

    - name: "Aqua-Hot Electric Low State"
      unique_id: aqua_hot_electric_low_state
      state_topic: "RVC/WATERHEATER_COMMAND_2"
      value_template: >-
        {% if value_json is defined and value_json['Command'] is defined %}
          {{ 'on' if value_json['Command'] == 0 else 'off' }}
        {% else %}
          invalid
        {% endif %}

    - name: "Aqua-Hot Operating Mode Raw"
      unique_id: "aqua_hot_operating_mode_raw"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: "{{ value_json['operating modes'] }}"

    - name: "Aqua-Hot Set Point Temperature"
      unique_id: "aqua_hot_set_point_temperature"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      unit_of_measurement: "°C"
      value_template: >-
        {% if value_json['set point temperature'] == "n/a" %}
          0
        {% else %}
          {{ value_json['set point temperature'] }}
        {% endif %}
      device_class: temperature
      icon: mdi:thermometer-lines

    - name: "Aqua-Hot Water Temperature"
      unique_id: "aqua_hot_water_temperature"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      unit_of_measurement: "°C"
      value_template: "{{ value_json['water temperature'] }}"
      device_class: temperature
      icon: mdi:thermometer-water

    - name: "Aqua-Hot Thermostat Status"
      unique_id: "aqua_hot_thermostat_status"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: >-
        {% if value_json is defined and value_json['thermostat status'] is defined %}
          {% set status = value_json['thermostat status'] %}
          {% if status == '00' or status == 0 %} set point met
          {% elif status == '01' or status == 1 %} set point not met
          {% else %} invalid
          {% endif %}
        {% else %}
          invalid
        {% endif %}
      icon: mdi:thermostat

    - name: "Aqua-Hot Burner Status"
      unique_id: "aqua_hot_burner_status"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: >-
        {% if value_json is defined and value_json['burner status'] is defined %}
          {% set status = value_json['burner status'] %}
          {% if status == '00' or status == 0 %} off
          {% elif status == '01' or status == 1 %} ac element is active
          {% else %} unknown
          {% endif %}
        {% else %}
          unknown
        {% endif %}
      icon: mdi:fire

    - name: "Aqua-Hot AC Element Status"
      unique_id: "aqua_hot_ac_element_status"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: >-
        {% if value_json is defined and value_json['ac element status'] is defined %}
          {% set status = value_json['ac element status'] %}
          {% if status == '00' or status == 0 %} no fault
          {% elif status == '11' or status == 1 %} open neutral fault detected
          {% else %} invalid: {{ status }}
          {% endif %}
        {% else %}
          invalid
        {% endif %}
      icon: mdi:alert-circle-outline

    - name: "Aqua-Hot High Temp Limit Switch Status"
      unique_id: "aqua_hot_high_temp_limit_switch_status"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: >-
        {% if value_json is defined and value_json['high temperature limit switch status'] is defined %}
          {% set status = value_json['high temperature limit switch status'] %}
          {% if status == '00' or status == 0 %} limit switch not tripped
          {% elif status == '11' or status == 1 %} limit switch tripped
          {% else %} unknown
          {% endif %}
        {% else %}
          unknown
        {% endif %}
      icon: mdi:alert

    - name: "Aqua-Hot Failure To Ignite Status"
      unique_id: "aqua_hot_failure_to_ignite_status"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: >-
        {% if value_json is defined and value_json['failure to ignite status'] is defined %}
          {% set status = value_json['failure to ignite status'] %}
          {% if status == '00' or status == 0 %} no failure
          {% elif status == '11' or status == 1 %} failed to ignite
          {% else %} unknown
          {% endif %}
        {% else %}
          unknown
        {% endif %}
      icon: mdi:fire-alert

    - name: "Aqua-Hot AC Power Failure Status"
      unique_id: "aqua_hot_ac_power_failure_status"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: >-
        {% if value_json is defined and value_json['ac power failure status'] is defined %}
          {% set status = value_json['ac power failure status'] %}
          {% if status == '00' or status == 0 %} ac power present
          {% elif status == '11' or status == 1 %} ac power not present
          {% else %} invalid: {{ status }}
          {% endif %}
        {% else %}
          invalid
        {% endif %}
      icon: mdi:power-plug-off

    - name: "Aqua-Hot DC Power Failure Status"
      unique_id: "aqua_hot_dc_power_failure_status"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: >-
        {% if value_json is defined and value_json['dc power failure status'] is defined %}
          {% set status = value_json['dc power failure status'] %}
          {% if status == '00' or status == 0 %} dc power present
          {% elif status == '11' or status == 1 %} dc power not present
          {% else %} invalid: {{ status }}
          {% endif %}
        {% else %}
          invalid
        {% endif %}
      icon: mdi:battery-alert-variant-outline


    # Date and Time from RV-C
    - name: "RV-C System Date"
      state_topic: "RVC/DATE_TIME_STATUS"
      value_template: >-
        {{ value_json['year'] }}-{{ '%02d'|format(value_json['month']) }}-{{ '%02d'|format(value_json['date']) }}
      icon: mdi:calendar

    - name: "RV-C System Time"
      state_topic: "RVC/DATE_TIME_STATUS"
      value_template: >-
        {{ '%02d'|format(value_json['hour']) }}:{{ '%02d'|format(value_json['minute']) }}:{{ '%02d'|format(value_json['second']) }}
      icon: mdi:clock

    - name: "Shade Raw Data"
      state_topic: "RVC/WINDOW_SHADE_CONTROL_STATUS/1"
      value_template: "{{ value_json }}"

    - name: "Shade Status Monitor"
      state_topic: "RVC/WINDOW_SHADE_CONTROL_STATUS/1"
      value_template: >-
        Motor: {{ value_json['motor status definition'] }},
        Forward: {{ value_json['forward status definition'] }},
        Reverse: {{ value_json['reverse status definition'] }}

    - name: "Shade Position Monitor"
      state_topic: "RVC/WINDOW_SHADE_CONTROL_STATUS/1"
      value_template: >-
        Position: {{ value_json.position | default(0) }},
        Motor Duty: {{ value_json['motor duty'] }}

    - name: "Shade Full State"
      state_topic: "RVC/WINDOW_SHADE_CONTROL_STATUS/1"
      value_template: >-
        Pos: {{ value_json.position | default(value_json['motor duty']) | default(0) }},
        LastCmd: {{ value_json['last command definition'] }},
        Motor: {{ value_json['motor status definition'] }},
        Forward: {{ value_json['forward status definition'] }},
        Reverse: {{ value_json['reverse status definition'] }}
        State: 
        {% if value_json['motor status definition'] == 'active' %}
        {% if value_json['last command definition'] == 'toggle forward' %}opening
        {% elif value_json['last command definition'] == 'toggle reverse' %}closing
        {% else %}invalid{% endif %}
        {% else %}
        {% if value_json['last command definition'] == 'toggle forward' %}open
        {% elif value_json['last command definition'] == 'toggle reverse' %}closed
        {% else %}invalid{% endif %}
        {% endif %}

    - name: "DC House Voltage"
      state_topic: "RVC/DC_SOURCE_STATUS_1/1"
      unique_id: "DCHouseVoltage"
      unit_of_measurement: "V"
      device_class: voltage
      state_class: measurement
      icon: mdi:car-battery
      value_template: "{{ value_json['dc voltage'] }}"
    - name: "Inverter"
      state_topic: "RVC/INVERTER_STATUS/1"
      unique_id: "INVERTER_STATUS"
      value_template: "{{ value_json['status definition'] }}"
    - name: "Charger Current"
      state_topic: "RVC/CHARGER_STATUS/1"
      unique_id: "CHARGER_STATUS_CURRENT"
      unit_of_measurement: "V"
      device_class: voltage
      state_class: measurement
      icon: mdi:car-battery
      value_template: "{{ value_json['charge current'] }}"
    - name: "Charger Voltage"
      state_topic: "RVC/CHARGER_STATUS/1"
      unique_id: "CHARGER_STATUS_VOLTAGE"
      icon: mdi:car-battery
      unit_of_measurement: "V"
      device_class: voltage
      state_class: measurement
      value_template: "{{ value_json['charge voltage'] }}"
    - name: "Ambient Temperature"
      state_topic: "RVC/THERMOSTAT_AMBIENT_STATUS/249"
      unique_id: "THERMOSTAT_AMBIENT_STATUS"
      unit_of_measurement: "F"
      state_class: measurement
      value_template: "{{ value_json['ambient temp F'] }}"
    - name: "Inside Temperature"
      state_topic: "RVC/THERMOSTAT_AMBIENT_STATUS/250"
      unique_id: "THERMOSTAT_INDOOR_TEMP"
      unit_of_measurement: "F"
      state_class: measurement
      value_template: "{{ value_json['ambient temp F'] }}"
    - name: "Parking Brake"
      state_topic: "RVC/CHASSIS_MOBILITY_STATUS"
      unique_id: "ParkingBrake"
      #state_class: measurement
      device_class: enum
      value_template: "{{ value_json['park brake status definition'] }}"
    - name: "Vehicle Speed"
      state_topic: "RVC/CHASSIS_MOBILITY_STATUS"
      unique_id: "vehiclespeed"
      icon: mdi:speedometer
      state_class: measurement
      value_template: >-
        {% if value_json['vehicle speed'] == 65535 %}
          0
        {% else %}
          {{ ((value_json['vehicle speed'] | float / 256) / 1.609344) | round(0) | int }}
        {% endif %}
    - name: "Vehicle RPM"
      state_topic: "RVC/CHASSIS_MOBILITY_STATUS"
      unique_id: "engine_rpm"
      icon: mdi:speedometer
      state_class: measurement
      value_template: >-
        {% if (value_json['engine rpms'] == 'unknown') or (value_json['engine rpms'] == 'unavailable') or (value_json['engine rpms'] == 65535) %}
          0
        {% else %}
          {{ (((value_json['engine rpms']) | float) * 0.125) | int}}
        {% endif %}

    - name: "Transmision Gear"
      state_topic: "RVC/CHASSIS_MOBILITY_STATUS"
      unique_id: "transmissiongear"
      icon: mdi:car-shift-pattern
      #state_class: measurement
      device_class: enum
      value_template: "{{ value_json['transmission current gear definition'] }}"
    - name: "Fresh Water"
      state_topic: "RVC/TANK_STATUS/0"
      unit_of_measurement: "%"
      state_class: measurement
      value_template: "{{ ((value_json['relative level'] | float) * (value_json['resolution'])) | round(0) | int }}"
      icon: mdi:car-coolant-level
      unique_id: "FreshWater"
    - name: "Generator"
      state_topic: "RVC/GENERATOR_STATUS_1"
      value_template: "{{ value_json['status definition'] }}"
      unique_id: "generatorstatus"
    - name: "Generator Hours"
      state_topic: "RVC/GENERATOR_STATUS_1"
      value_template: "{{ (value_json['engine run time'] / 60) | int }}"
      state_class: total
      unique_id: "generator_hours"
    - name: "Generator Auto Started"
      state_topic: "RVC/RVC/GENERATOR_DEMAND_STATUS"
      value_template: "{{ value_json['generator demand definition']  }}"
      unique_id: "generator_auto_started"
    - name: "Power RMS Current"
      state_topic: "RVC/ATS_AC_STATUS_1/1"
      state_class: measurement
      unit_of_measurement: "A"
      value_template: "{{ value_json['rms current'] }}"
      #      value_template: >-
      #        {% if (value_json['rms current'] == 'unknown')  %}
      #          0
      #          {% else %}
      #          {{ value_json['rms current'] }}
      #          {% endif %}
      unique_id: "power_rms_current"
    - name: "Power RMS Voltage"
      state_topic: "RVC/ATS_AC_STATUS_1/1"
      value_template: "{{ value_json['rms voltage'] }}"
      device_class: voltage
      state_class: measurement
      unit_of_measurement: "V"
      unique_id: "power_rms_voltage"
    - name: "Generator RPM"
      state_topic: "RVC/GENERATOR_STATUS_2"
      value_template: "{{ (((value_json['engine rpm']) | float) * 0.125) | int}}"
      unique_id: "generator_rpm"
      state_class: measurement
    - name: "Generator Caution Light"
      state_topic: "RVC/GENERATOR_STATUS_2"
      value_template: "{{ (value_json['caution light']) }}"
      unique_id: "generator_caution_light"
      state_class: measurement
    - name: "Generator Coolent Temperature"
      state_topic: "RVC/GENERATOR_STATUS_2"
      value_template: "{{ (value_json['engine coolant temperature F']) }}"
      unique_id: "generator_coolant_temp"
      state_class: measurement
    - name: "Generator Oil Pressure"
      state_topic: "RVC/GENERATOR_STATUS_2"
      value_template: "{{ (value_json['engine oil pressure']) }}"
      unique_id: "generator_coolant_oil_pressure"
      state_class: measurement
    - name: "Generator Fuel Rate"
      state_topic: "RVC/GENERATOR_STATUS_2"
      value_template: "{{ (value_json['fuel rate']) }}"
      unique_id: "generator_fuel_rate"
      state_class: measurement
    - name: "Generator oil level shutdown alert"
      state_topic: "RVC/GENERATOR_STATUS_2"
      value_template: >
        {% if value_json['oil level shutdown switch'] == 0 %}
          {{ "Off" | string }}
        {% else %}
          {{ "Alert" | string }}
        {% endif %}
      unique_id: "generator_oil_level_shutdown_alert"
    - name: "Generator oil pressure shutdown alert"
      state_topic: "RVC/GENERATOR_STATUS_2"
      value_template: >
        {% if value_json['oil pressure shutdown switch'] == 0 %}
          {{ "Off" | string }}
        {% else %}
          {{ "Alert" | string }}
        {% endif %}
      unique_id: "generator_oil_pressure_shutdown_alert"
    - name: "Generator temperature shutdown alert"
      state_topic: "RVC/GENERATOR_STATUS_2"
      value_template: >
        {% if value_json['temperature shutdown switch'] == 0 %}
          {{ "Off" | string }}
        {% else %}
          {{ "Alert" | string }}
        {% endif %}
      unique_id: "generator_temperature_shutdown_alert"

    - name: "Black Tank"
      state_topic: "RVC/TANK_STATUS/1"
      value_template: "{{ (value_json['relative level'] | float) * (value_json['resolution']) | round(0) | int }}"
      unit_of_measurement: "%"
      state_class: measurement
      icon: mdi:car-coolant-level
      unique_id: "BlackTank"
    - name: "Chassis Battery"
      state_topic: "RVC/DC_SOURCE_STATUS_1/1"
      unit_of_measurement: "V"
      #device_class: energy
      state_class: measurement
      value_template: "{{ value_json['dc voltage'] }}"
      icon: mdi:car-battery
      unique_id: "chasis_voltage"
    - name: "TV Lift Open"
      state_topic: "RVC/DC_DIMMER_STATUS_3/125"
      value_template: "{{ value_json['operating status (brightness)'] }}"
      icon: mdi:light-recessed
      unit_of_measurement: "%"
      unique_id: "dimmer_3_125"
    - name: "TV Lift Close"
      state_topic: "RVC/DC_DIMMER_STATUS_3/126"
      value_template: "{{ value_json['operating status (brightness)'] }}"
      icon: mdi:light-recessed
      unit_of_measurement: "%"
      unique_id: "dimmer_3_126"
    - name: "Battery Disconnect"
      state_topic: "RVC/DC_DIMMER_STATUS_3/128"
      value_template: "{{ value_json['operating status (brightness)'] }}"
      unit_of_measurement: "%"
      unique_id: "dimmer_3_128"

    - name: "DC Dimmer Operating Status"
      unique_id: "rvc_dc_dimmer_operating_status_1"
      state_topic: "RVC/DC_DIMMER_STATUS_3/1"
      value_template: "{{ value_json['operating status (brightness)'] }}"

  binary_sensor:
    - name: "Water Hookup"
      state_topic: "RVC/WATER_PUMP_STATUS"
      value_template: "{{ value_json['water hookup detected definition'] }}"
      payload_on: "on"
      payload_off: "off"
      unique_id: "water_hookup"
    - name: "Water Pump Active"
      state_topic: "RVC/WATER_PUMP_STATUS"
      value_template: "{{ value_json['operating status definition'] }}"
      payload_on: "on"
      payload_off: "off"
      unique_id: "water_pump_active"
    - name: "Water Autofill Valve"
      state_topic: "RVC/AUTOFILL_STATUS"
      value_template: "{{ value_json['valve status definition'] }}"
      payload_on: "open"
      payload_off: "closed"
      unique_id: "water_autofill_value"
    - name: "Water Autofill"
      state_topic: "RVC/AUTOFILL_STATUS"
      value_template: "{{ value_json['operating status definition'] }}"
      payload_on: "on"
      payload_off: "off"
      unique_id: "water_autofill"

    - name: "Aqua-Hot Active"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: >-
        {% if value_json is defined and value_json['operating modes'] is defined %}
          {{ 'on' if value_json['operating modes'] != 0 else 'off' }}
        {% else %}
          invalid
        {% endif %}
      payload_on: "on"
      payload_off: "off"
      device_class: heat
      unique_id: "aqua_hot_active"
      
    - name: "Black Waste Dump"
      state_topic: "RVC/WASTEDUMP_STATUS"
      value_template: "{{ value_json['black valve status definition'] }}"
      payload_on: "open"
      payload_off: "closed"
      unique_id: "blacK_waste_dump"
    - name: "Gray Water Dump"
      state_topic: "RVC/WASTEDUMP_STATUS"
      value_template: "{{ value_json['gray valve status definition'] }}"
      payload_on: "open"
      payload_off: "closed"
      unique_id: "gray_water_dump"

    # AC Power Status
    - name: "AC Power Status"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: "{{ value_json['ac power failure status definition'] != 'ac power not present' }}"
      device_class: power

    # DC Power Status
    - name: "DC Power Status"
      state_topic: "RVC/WATERHEATER_STATUS/1"
      value_template: "{{ value_json['dc power failure status definition'] != 'dc power not present' }}"
      device_class: power


##################################################################

lock:
  - platform: template
    name: "Cargo Door Locks"
    unique_id: cargo_door_locks
    value_template: >-
      {% set locks = [
        states.lock.cargolock1,
        states.lock.cargolock2,
        states.lock.cargolock3
      ] %}
      {% set available_locks = locks | selectattr('state', 'in', ['locked', 'unlocked']) | list %}
      {% if available_locks | length == 0 %}
        unavailable
      {% elif available_locks | selectattr('state', 'eq', 'unlocked') | list | length > 0 %}
        unlocked
      {% else %}
        locked
      {% endif %}
    lock:
      service: lock.lock
      target:
        entity_id:
          - lock.cargo_door_lock1
          - lock.cargo_door_lock2
          - lock.cargo_door_lock3
          - lock.cargo_door_lock4
          - lock.cargo_door_lock5
    unlock:
      service: lock.unlock
      target:
        entity_id:
          - lock.cargo_door_lock1
          - lock.cargo_door_lock2
          - lock.cargo_door_lock3
          - lock.cargo_door_lock4
          - lock.cargo_door_lock5


light:
  - platform: group
    name: Exterior Lights
    unique_id: exterior_lights
    entities:
      - light.docking_lights
      - light.awning_lights
      - light.exterior_accents
      - light.porch_handle

fan:
  - platform: template
    fans:
      # Fan definition using the key 'mid_bath_fan'
      mid_bath_fan:
        friendly_name: "Mid Bath Fan"
        unique_id: "mid_bath_fan_55_template_wrapper_old_syntax" # Use a unique ID

        # State mirrors the backend switch
        value_template: "{{ states('switch.mid_bath_fan_switch') }}" # Ensure this switch ID is correct

        # Actions call the backend switch's services
        turn_on:
          service: switch.turn_on
          target:
            entity_id: switch.mid_bath_fan_switch
        turn_off:
          service: switch.turn_off
          target:
            entity_id:
              switch.mid_bath_fan_switch

              # Fan definition using the key 'rear_bath_fan'
      rear_bath_fan:
        friendly_name: "Rear Bath Fan"
        unique_id: "rear_bath_fan_56_template_wrapper_old_syntax" # Use a unique ID

        # State mirrors the backend switch
        value_template: "{{ states('switch.rear_bath_fan_switch') }}" # Ensure this switch ID is correct

        # Actions call the backend switch's services
        turn_on:
          service: switch.turn_on
          target:
            entity_id: switch.rear_bath_fan_switch
        turn_off:
          service: switch.turn_off
          target:
            entity_id: switch.rear_bath_fan_switch
