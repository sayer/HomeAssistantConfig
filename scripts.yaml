store_bus:
  alias: Store Bus
  sequence:
  - service: fan.turn_off
    data: {}
    target:
      entity_id: fan.fans
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.all_lights
      - light.entry_light_2
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - switch.floor_heat_1
      - switch.floor_heat_2
      - switch.floor_heat_3
      - switch.water_pump
      - switch.heat
      - switch.air_conditioning
  - service: notify.notify
    data:
      message: Foretravel has been stored
      title: Foretravel Stored
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - switch.black_waste_dump
      - switch.gray_water_bypass
      - switch.floor_heat_1
      - switch.floor_heat_2
      - switch.floor_heat_3
      - switch.water_autofill
      - switch.water_pump
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id:
      - switch.auto_gen
      - switch.auto_gen_5
  - delay:
      hours: 0
      minutes: 2
      seconds: 0
      milliseconds: 0
  - service: lock.lock
    data: {}
    target:
      entity_id: lock.locks
  - service: cover.close_cover
    data: {}
    target:
      entity_id: cover.all_night_shades
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: input_boolean.camping
  - service: tts.cloud_say
    data:
      cache: true
      entity_id: media_player.bedroom_2
      message: Bus is being stored.
  - service: input_boolean.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: input_boolean.storage
  mode: single
good_night:
  alias: Good Night
  sequence:
  - condition: state
    entity_id: input_boolean.busparked
    state: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - condition: state
    entity_id: input_boolean.camping
    state: 'on'
  - data: {}
    target:
      entity_id: light.all_ceiling_lights
    action: light.turn_off
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - data: {}
    target:
      entity_id: light.exterior_lights
    action: light.turn_off
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - data: {}
    target:
      entity_id:
      - light.all_lights
      - light.entry_light_2
    action: light.turn_off
  - data: {}
    target:
      entity_id: lock.locks
    action: lock.lock
  - data: {}
    target:
      entity_id: cover.all_night_shades
    action: cover.close_cover
  - data: {}
    target:
      entity_id:
      - switch.auto_gen
      - switch.auto_gen_5
    action: homeassistant.turn_on
  mode: single
good_morning:
  alias: Good Morning
  sequence:
  - condition: state
    entity_id: input_boolean.busparked
    state: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - condition: state
    entity_id: input_boolean.camping
    state: 'on'
  - data: {}
    target:
      entity_id:
      - light.dimmer_3_19
      - light.cockpit_accents
      - light.living_room_accents
      - light.rear_bath_accent
      - light.dimmer_3_10
      - light.entry_light_2
    action: light.turn_on
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - data: {}
    target:
      entity_id:
      - cover.windshield_night
      - cover.d_s_living_room_night
      - cover.dinette_night
    action: cover.open_cover
  mode: single
evening:
  alias: Evening
  sequence:
  - condition: state
    entity_id: input_boolean.busparked
    state: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - condition: state
    entity_id: input_boolean.camping
    state: 'on'
  - data: {}
    target:
      entity_id:
      - light.exterior_accents
      - light.interior_accents
      - light.porch_handle
      - light.awning_lights
    action: light.turn_on
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - data: {}
    target:
      entity_id: cover.all_day_shades
    action: cover.close_cover
  mode: single
  icon: mdi:clock-time-seven
tv_time:
  alias: TV Time
  sequence:
  - condition: state
    entity_id: input_boolean.busparked
    state: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  - service: light.turn_on
    data: {}
    target:
      entity_id:
      - light.interior_accents
    enabled: false
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.all_ceiling_lights
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.cockpit_accents
      - light.living_room_accents
  - service: cover.close_cover
    data: {}
    target:
      entity_id:
      - cover.cockpit_night_shades
      - cover.living_night_shades
  mode: single
  icon: mdi:television
drive_time:
  alias: Drive Time
  sequence:
  - service: cover.open_cover
    data: {}
    target:
      entity_id:
      - cover.cockpit_night_shades
      - cover.cockpit_day_shades
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.all_ceiling_lights
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.exterior_accents
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.interior_accents
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.all_lights
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - switch.black_waste_dump
      - switch.gray_water_bypass
      - switch.water_autofill
      - switch.water_pump
  - service: fan.turn_off
    data: {}
    target:
      entity_id: fan.fans
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - media_player.tv_samsung_6_series_50
      - media_player.samsung_6_series_50
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: input_boolean.camping
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id:
      - light.dimmer_3_14
      - light.entry_light_2
  - service: timer.start
    data: {}
    target:
      entity_id: timer.setlocationtimer
  - service: tts.cloud_say
    data:
      cache: true
      entity_id: media_player.bedroom_2
      message: Drive time!
  - service: input_boolean.turn_off
    metadata: {}
    data: {}
    target:
      entity_id:
      - input_boolean.storage
      - input_boolean.camping
  - service: switch.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: switch.ac_4
  mode: single
  icon: mdi:steering
all_bright:
  alias: All Bright
  sequence:
  - condition: state
    entity_id: input_boolean.busparked
    state: 'on'
    for:
      hours: 0
      minutes: 1
      seconds: 0
  - service: homeassistant.turn_on
    data: {}
    target:
      entity_id: light.all_lights
  - service: cover.open_cover
    data: {}
    target:
      entity_id:
      - cover.all_day_shades
      - cover.all_night_shades
  mode: single
  icon: mdi:weather-sunny
set_current_location_as_home:
  alias: Set Current location as home
  sequence:
  - condition: state
    entity_id: sensor.gps_127_0_0_1_latitude
    state: '{% if sensor.latitude | is_number %}'
    enabled: false
  - data:
      latitude: '{{ states(''sensor.gps_127_0_0_1_latitude'') | float }}'
      longitude: '{{ states(''sensor.gps_127_0_0_1_longitude'') | float }}'
    enabled: false
    action: homeassistant.set_location
  - data:
      latitude: '{{ states(''sensor.gps_127_0_0_1_latitude'') | float }}'
      longitude: '{{ states(''sensor.gps_127_0_0_1_longitude'') | float }}'
    action: homeassistant.set_location
  mode: single
notify_iphone:
  alias: Notify iPhone
  sequence:

  - data:
      message: '{{message}}'
      title: '{{title}} — {{ states(''input_number.coach_number'') | int }}'
    action: notify.notify
  - data:
      message: '{{message}}'
      title: '{{title}} — {{ states(''input_number.coach_number'') | int }}'
    action: notify.mobile_app_iphone_15_pro_max
  mode: single
  fields:
    title:
      selector:
        text:
      name: Title
      default: Foretravel
    message:
      selector:
        text:
      name: Message
tts_alert:
  alias: TTS alert
  sequence:
  - service: media_player.play_media
    target:
      entity_id:
      - media_player.kitchen
      - media_player.bedroom_2
    data:
      media_content_id: media-source://media_source/local/f1-radio-notification.mp3
      media_content_type: audio/mpeg
    metadata:
      title: f1-radio-notification.mp3
      thumbnail:
      media_class: music
      children_media_class:
      navigateIds:
      - {}
      - media_content_type: app
        media_content_id: media-source://media_source
  - service: tts.speak
    data:
      cache: true
      message: '{{message}}'
      media_player_entity_id: media_player.kitchen,media_player.bedroom_2
    target:
      entity_id: tts.piper
  mode: single
  fields:
    message:
      selector:
        text:
      name: Message
notify_home:
  alias: Notify Home
  sequence:
  - data:
      message: '{{message}}'
      title: '{{title}}'
    action: script.notify_iphone
  - data:
      message: '{{message}}'
      title: '{{title}}'
    action: script.tts_alert
  - data:
      title: '{{title}}'
      message: '{{message}}'
    action: notify.persistent_notification
  mode: single
  fields:
    message:
      selector:
        text:
      name: Message
      required: true
    title:
      selector:
        text:
      name: Title
      default: Foretravel
ai_analyze_dash_video:
  alias: AI - Analyze Dash Video
  sequence:
  - data:
      filename: /config/www/snapshot_dash.jpg
    action: camera.snapshot
    target:
      device_id: eea91240afc6576d615f0b18aa1ec28e
  - action: llmvision.stream_analyzer
    data:
      remember: false
      duration: 5
      max_frames: 3
      include_filename: false
      target_width: 1280
      detail: low
      max_tokens: 100
      temperature: 0.2
      expose_images: false
      provider: 01JDN5XHDWG1Q8TJ5718TYR6EE
      message: Analyze and describe the image. Highlight any people or vehicles. Keep
        the resonse to 128 characters.
      image_entity:
      - camera.g5_flex_high_resolution_channel
    response_variable: response
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
  - data:
      message: 'Response received: {{ response.response_text }}'
    action: system_log.write
  - condition: template
    value_template: '{{ response.response_text is not none and response.response_text
      | length > 0 }}'
  - data:
      value: '{{ response.response_text }}'
    target:
      entity_id: input_text.llmvision_response
    action: input_text.set_value
  - action: notify.mobile_app_iphone_15_pro_max
    metadata: {}
    data:
      title: Foretravel - Dash
      message: '{{ response.response_text }}'
      data:
        image: http://192.168.100.175:8123/local/snapshot_dash.jpg
        content-type: image/jpeg
        hide-thumbnail: false
  description: Analyzes the dash video and updates input_text with the response.
  icon: mdi:cube-scan


lock_all_cargo_doors:
  alias: "Lock All Cargo Doors with Delay"
  sequence:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states.lock.cargo_door_lock_all is defined and states.lock.cargo_door_lock_all.state in ['locked', 'unlocked'] }}
          sequence:
            - service: lock.lock
              target:
                entity_id: lock.cargo_door_lock_all
      default:

        - service: lock.lock
          target:
            entity_id: lock.cargo_door_lock_0
        - service: lock.lock
          target:
            entity_id: lock.cargo_door_lock_1
        - delay: "00:00:02"
        - service: lock.lock
          target:
            entity_id: lock.cargo_door_lock_2
        - delay: "00:00:02"
        - service: lock.lock
          target:
            entity_id: lock.cargo_door_lock_3
        - delay: "00:00:02"
        - service: lock.lock
          target:
            entity_id: lock.cargo_door_lock_4

unlock_all_cargo_doors:
  alias: "Unlock All Cargo Doors with Delay"
  sequence:
    - choose:
        - conditions:
            - condition: template
              value_template: >
                {{ states.lock.cargo_door_lock_all is defined and states.lock.cargo_door_lock_all.state in ['locked', 'unlocked'] }}
          sequence:
            - service: lock.unlock
              target:
                entity_id: lock.cargo_door_lock_all
      default:
        - service: lock.unlock
          target:
            entity_id: lock.cargo_door_lock_0
        - delay: "00:00:02"
        - service: lock.unlock
          target:
            entity_id: lock.cargo_door_lock_1
        - delay: "00:00:02"
        - service: lock.unlock  
          target:
            entity_id: lock.cargo_door_lock_2
        - delay: "00:00:02"
        - service: lock.unlock
          target:
            entity_id: lock.cargo_door_lock_3
        - delay: "00:00:02"
        - service: lock.unlock
          target:
            entity_id: lock.cargo_door_lock_4
