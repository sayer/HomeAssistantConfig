# Master Thermostat Automations
- id: master_thermostat_temperature_sync
  alias: "Master Thermostat - Sync Temperature"
  description: "Sync all thermostats when master temperature changes"
  trigger:
    - platform: state
      entity_id: input_number.master_thermostat_temp
  condition:
    - condition: template
      value_template: "{{ trigger.from_state.state != trigger.to_state.state }}"
  action:
    - service: script.master_thermostat_set_temperature
      data:
        temperature: "{{ states('input_number.master_thermostat_temp') | int }}"

- id: master_thermostat_mode_sync
  alias: "Master Thermostat - Sync Mode"
  description: "Sync all thermostats when master mode changes"
  trigger:
    - platform: state
      entity_id: input_select.master_thermostat_mode
  condition:
    - condition: template
      value_template: "{{ trigger.from_state.state != trigger.to_state.state }}"
  action:
    - service: script.master_thermostat_set_hvac_mode
      data:
        hvac_mode: "{{ states('input_select.master_thermostat_mode') }}"

# Generator Automations
- id: generator_start_timer
  alias: "Generator - Start Timer"
  trigger:
    - platform: state
      entity_id: switch.generator
      to: "on"
  action:
    - service: input_datetime.set_datetime
      target:
        entity_id: input_datetime.generator_run_start
      data:
        datetime: "{{ now() }}"

- id: generator_stop_timer
  alias: "Generator - Stop Timer"
  trigger:
    - platform: state
      entity_id: switch.generator
      to: "off"
  action:
    - service: input_number.set_value
      target:
        entity_id: input_number.generator_last_session_seconds
      data:
        value: "{{ states('sensor.generator_current_session_time') }}"
